# Template PHP Build

# This template allows you to validate your PHP application.
# The workflow allows running tests and code linting on the default branch.

image: composer:2.0

pipelines:
  default:
    - parallel:
        - step:
            name: Test
            script:
              - apt-get update && apt-get install -qy git curl libmcrypt-dev mariadb-client ghostscript
              - yes | pecl install mcrypt-1.0.3
              - docker-php-ext-install pdo_mysql bcmath exif
              - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=compoer
              - composer install
              - ./vendor/bin/phpunit test
            caches:
              - composer
            deployment: test
        - step:
            name: Build and Push Docker Image
            image: google/cloud-sdk:latest
            script:
              - echo $GCLOUD_API_KEYFILE > ~/.gcloud-api-key.json
              - gcloud auth activate-service-account --key-file ~/.gcloud-api-key.json
              - docker login -u _json_key --password-stdin https://$DOCKER_GCR_REPO_URL < ~/.gcloud-api-key.json
              - docker build -t $DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT} .
              - docker tag $DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT} $DOCKER_GCR_REPO_URL/$GCLOUD_PROJECT_ID/$DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT}
              - docker push $DOCKER_GCR_REPO_URL/$GCLOUD_PROJECT_ID/$DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT}
              - gcloud container clusters get-credentials $K8s_CLUSTER_NAME --zone=$GCLOUD_ZONE --project $GCLOUD_PROJECT_ID
              - kubectl set image deployment $K8s_DEPLOYMENT_NAME $K8s_DEPLOYMENT_NAME=$DOCKER_GCR_REPO_URL/$GCLOUD_PROJECT_ID/$DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT} --record --namespace=$K8s_NAMESPACE